# David Schoder
# 4552990
# I modified ncopy to check weather len is odd or even
# If odd, copy once, subtract 1 fron len, and, while len > 0
# then copy two and subtract 2 from len each loop
# 
# If even, copy two and subtract 2 from len each loop until len !> 0
#
# I thought it was pretty clever
#
#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len ints to dst.
# Return the number of positive ints (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
ncopy:	pushl %ebp		# Save old frame pointer
	rrmovl %esp,%ebp	# Set up new frame pointer
	pushl %esi		# Save callee-save regs
	pushl %ebx
	pushl %edi
	mrmovl 8(%ebp),%ebx	# src
	mrmovl 16(%ebp),%edx	# len
	mrmovl 12(%ebp),%ecx	# dst

##################################################################
# You can modify this portion
	# Loop header
	xorl %eax,%eax
	andl %edx,%edx
	jle Done
	rrmovl %edx,%edi		# edi = len
	irmovl $1,%eax			# eax = 1
	andl %eax,%edi			# if len odd, do one copy
	je Reset
	xorl %eax,%eax			# count = 0;
	andl %edx,%edx			# len > 0?
	jle Done				# if so, goto Done:
	mrmovl (%ebx), %esi		# read val from src...
	rmmovl %esi, (%ecx)		# ...and store it to dst
	andl %esi, %esi			# val <= 0?
	jle Bob					# if so, goto Bob:
	iaddl $1, %eax			# count++
Bob:
	iaddl $-1, %edx			# len--
	iaddl $4, %ebx			# src++
	iaddl $4, %ecx			# dst++
	andl %edx,%edx			# len > 0?
	jle Done				# if not, go to Done:
	jmp Even
Reset:	
	xorl %eax,%eax
Even:	
	mrmovl (%ebx), %esi		# read val from src...
	rmmovl %esi, (%ecx)		# ...and store it to dst
	andl %esi, %esi			# val <= 0?
	jle Next				# if so, goto Next:
	iaddl $1, %eax			# count++
Next:
	mrmovl 4(%ebx), %esi	# read val from src...
	rmmovl %esi, 4(%ecx)	# ...and store it to dst
	andl %esi, %esi			# val <= 0?
	jle Npos				# if so, goto Npos:	
	iaddl $1, %eax			# count++
Npos:	
	iaddl $-2, %edx			# len-2
	iaddl $8, %ebx			# src+2
	iaddl $8, %ecx			# dst+2
	andl %edx,%edx			# len > 0?
	jg Even					# if so, goto Loop:
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	popl %edi               # Restore callee-save registers
	popl %ebx
	popl %esi
	rrmovl %ebp, %esp
	popl %ebp
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
